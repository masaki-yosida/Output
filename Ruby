putsメソッド
putsメソッドは引数であるオブジェクトを標準出力として出力します。この時、引数であるオブジェクトは文字列に変換されます。
使い方
puts   ("xxx")　　　　　　　　　　　　puts  "xxx"

代入
# 変数nameに、文字列「にんじゃわんこ」を代入してください
name = "にんじゃわんこ"
# 変数nameを出力してください
puts name

each メソッド
each メソッドは配列や範囲オブジェクトなどで用意されているメソッドであり、オブジェクトに含まれている要素を順に取り出すことができます
オブジェクト.each{|変数|
  実行する処理1
  実行する処理2
}
または

オブジェクト.each do |変数|
  実行する処理1
  実行する処理2
end
例
languages = ["日本語", "英語", "スペイン語"]
# each文を用いて、要素ごとに「○○を話せます」と出力してください
languages.each do |language|
  puts "#{language}を話せます"
end

Hash(ハッシュ)
配列は一つの要素にオブジェクトが一つ入っていたのに対して、ハッシュはオブジェクトがキーとバリューの二つ入っているのが特長です
例
fruits = {"apple"=> "100円", "orange"=> "80円", "melon"=> "500"}
puts fruits

ハッシュの書き方のまとめ
# キーが文字列の書き方
fruits = {"apple"=> "100円", "orange"=> "80円", "melon"=> "500"}
# キーがシンボルの書き方
fruits = {:apple=> "100円", :orange=> "80円", :melon=> "500"}
# キーがシンボルの書き方(省略)
fruits = {apple："100円", orange: "80円", :melon: "500"}

シンボル
シンボルを使うと文字列で普通に定義した時と比べて、少しだけ処理を高速化することができる.数値として扱われるので、文字列と比べればメモリサイズが軽くなります
可読性が上がる
hash1 = {:Ruby=>"Rails",:Python=>"Django"}

配列の中のハッシュ
配列[インデックス番号]でハッシュを用いることができるので、そのハッシュを代入した変数をつかって、変数[キー]とすることでハッシュの要素の値を用いることができます
exams = [
  {subject: "Math", score: 80},
  {subject: "Science", score: 55}
]
# each文を用いて、要素ごとに「○○の結果は△△点です」と出力してください
exams.each do|exam|
  puts "#{exam[:subject]}の結果は#{exam[:score]}点です"
end

復習
characters = [
  {name: "にんじゃわんこ", age: 14},
  {name: "ひつじ仙人"},
  {name: "ベイビーわんこ", age: 5},
  {name: "とりずきん"}
]
characters.each do |character|
  puts "--------------------"
  puts "名前は#{character[:name]}です"
  
  # キー:ageの値に応じて年齢の情報を出力してください
  if character[:age]
    puts "年齢は#{character[:age]}歳です"
  else
    puts "年齢は秘密です"
   end
end
